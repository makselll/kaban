version: '3.8'

services:
  web:
    container_name: web
    build: 
      context: ../
      dockerfile: docker/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres-1
      - postgres-2
      - postgres-3
    environment:
      DJANGO_SETTINGS_MODULE: settings
      DB_HOST: haproxy
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpass

  postgres-1:
    container_name: postgres-1
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpass
      PATRONI_NAME: postgres-1
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /var/lib/postgresql/data
      PATRONI_POSTGRESQL_PGPASS: /tmp/pgpass
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replicator
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: blogpass
      PATRONI_admin_USERNAME: admin
      PATRONI_admin_PASSWORD: admin
      PATRONI_ETCD_URL: http://etcd:2379
    volumes:
      - postgres_1_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
      - "8008:8008"
    depends_on:
      - etcd

  postgres-2:
    container_name: postgres-2
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpass
      PATRONI_NAME: postgres-2
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /var/lib/postgresql/data
      PATRONI_POSTGRESQL_PGPASS: /tmp/pgpass
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replicator
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: blogpass
      PATRONI_admin_USERNAME: admin
      PATRONI_admin_PASSWORD: admin
      PATRONI_ETCD_URL: http://etcd:2379
    volumes:
      - postgres_2_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
      - "8009:8008"
    depends_on:
      - etcd

  postgres-3:
    container_name: postgres-3
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpass
      PATRONI_NAME: postgres-3
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /var/lib/postgresql/data
      PATRONI_POSTGRESQL_PGPASS: /tmp/pgpass
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replicator
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: blogpass
      PATRONI_admin_USERNAME: admin
      PATRONI_admin_PASSWORD: admin
      PATRONI_ETCD_URL: http://etcd:2379
    volumes:
      - postgres_3_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
      - "8010:8008"
    depends_on:
      - etcd

  etcd:
    image: bitnami/etcd:latest
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ENABLE_V2=true
      - ETCDCTL_API=2
    ports:
      - "2379:2379"
    volumes:
      - etcd_data:/bitnami/etcd

  haproxy:
    container_name: haproxy
    user: root
    image: haproxy:latest
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "5432:5432"
    depends_on:
      - postgres-1
      - postgres-2
      - postgres-3

volumes:
  postgres_1_data:
  postgres_2_data:
  postgres_3_data:
  etcd_data: